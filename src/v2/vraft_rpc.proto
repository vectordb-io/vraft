syntax = "proto3";

package vraft_rpc;

service VRaft {
  rpc RpcPing (Ping) returns (PingReply) {}
  rpc RpcClientRequest (ClientRequest) returns (ClientRequestReply) {}
  rpc RpcRequestVote (RequestVote) returns (RequestVoteReply) {}
  rpc RpcAppendEntries (AppendEntries) returns (AppendEntriesReply) {}
}

message Ping {
  string msg = 1;
  uint64 node_id = 2;
}

message PingReply {
  string msg = 1;
  uint64 node_id = 2;
}

message LogIndex {
  int32 index = 1;
}

message Term {
  int64 term = 1;
}

message NodeId {
  uint64 node_id = 1;
}

message ClientRequest {
  int32 client_id = 1;
  int64 sequence_num = 2;
  string cmd = 3;
};

message ClientRequestReply {
  int32 code = 1;
  string msg = 2;
  string response = 3;
  string leader_hint = 4;
};

message RequestVote {
  int64 term = 1;
  uint64 node_id = 2;
  int64 last_log_index = 3;
  int64 last_log_term = 4;
};

message RequestVoteReply {
  int64 term = 1;
  bool vote_granted = 2;

  uint64 node_id = 3;
};

message Entry {
  int64 term = 1;
  string cmd = 2;
};

message AppendEntries {
  int64 term = 1;
  uint64 node_id = 2;
  int32 prev_log_index = 3;
  int32 prev_log_term = 4;
  repeated Entry entries = 5;
  int32 commit_index = 6;

  uint64 async_flag = 7;
};

message AppendEntriesReply {
  int64 term = 1;
  bool success = 2;
  int32 match_index = 3;

  uint64 node_id = 4;
  uint64 async_flag = 5;
};



